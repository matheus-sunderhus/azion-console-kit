name: Update PR Description with Commit Summary

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  push:
    branches:
      - dev

permissions: read-all

jobs:
  update-pr-description:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch: true

      - name: Set environment variables
        run: |
          echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
          echo "GITHUB_EVENT_PULL_REQUEST_HEAD=${GITHUB_EVENT_PULL_REQUEST_HEAD}" >> $GITHUB_ENV

      - name: Get commit messages
        run: |
          commits=$(git log --format=%s ${GITHUB_SHA}..${GITHUB_EVENT_PULL_REQUEST_HEAD})
          echo "COMMIT_MESSAGES=$commits" >> $GITHUB_ENV

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Generate summary using OpenAI GPT API
        env:
          COMMIT_MESSAGES: ${{ env.COMMIT_MESSAGES }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          response=$(curl -X POST \
            https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"model\": \"gpt-3.5-turbo\", \"messages\": [{\"role\": \"user\", \"content\": \"Summarize the following commit messages: ${COMMIT_MESSAGES}\"}], \"max_tokens\": 200, \"stop\": [\"\n\n\"]}" \
            -s)
          summary=$(echo "$response" | jq -r '.choices[0].message.content' | tr -d '\n')
          echo "RESPONSE=$summary" >> $GITHUB_ENV

      - name: Update PR description with summary
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `**Commit Summary:** ${env.RESPONSE}`
            })
